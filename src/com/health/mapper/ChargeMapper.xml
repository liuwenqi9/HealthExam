<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.ChargeMapper" >
  <resultMap id="BaseResultMap" type="com.health.entity.Charge" >
    <id column="CHARGEID" property="chargeid" jdbcType="DECIMAL" />
    <result column="ACCOUNT" property="account" jdbcType="OTHER" />
    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
    <result column="PRETIME" property="pretime" jdbcType="OTHER" />
    <result column="TIME" property="time" jdbcType="OTHER" />
    <result column="STATE" property="state" jdbcType="DECIMAL" />
  </resultMap>
  
  <insert id="insertCharge" parameterType="com.health.entity.Charge">
  	 insert into charge(account,amount,pretime,state)
  	 	values(#{account}, #{amount}, #{pretime}, #{state}) 
  </insert>
  
  <select id="getMaxChargeId" resultType="java.lang.String">
  	 select max(chargeid) from charge
  </select>
  
  <update id="updateAmountOfCharge" parameterType = "java.util.HashMap">
  		update charge set amount = #{amount} where chargeId = #{chargeId}
  </update>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CHARGEID, ACCOUNT, AMOUNT, PRETIME, TIME, STATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.health.entity.ChargeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CHARGE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from CHARGE
    where CHARGEID = #{chargeid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from CHARGE
    where CHARGEID = #{chargeid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.health.entity.ChargeExample" >
    delete from CHARGE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.health.entity.Charge" >
    insert into CHARGE (CHARGEID, ACCOUNT, AMOUNT, 
      PRETIME, TIME, STATE)
    values (#{chargeid,jdbcType=DECIMAL}, #{account,jdbcType=OTHER}, #{amount,jdbcType=DECIMAL}, 
      #{pretime,jdbcType=OTHER}, #{time,jdbcType=OTHER}, #{state,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.health.entity.Charge" >
    insert into CHARGE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="chargeid != null" >
        CHARGEID,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="pretime != null" >
        PRETIME,
      </if>
      <if test="time != null" >
        TIME,
      </if>
      <if test="state != null" >
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="chargeid != null" >
        #{chargeid,jdbcType=DECIMAL},
      </if>
      <if test="account != null" >
        #{account,jdbcType=OTHER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="pretime != null" >
        #{pretime,jdbcType=OTHER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=OTHER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.health.entity.ChargeExample" resultType="java.lang.Integer" >
    select count(*) from CHARGE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update CHARGE
    <set >
      <if test="record.chargeid != null" >
        CHARGEID = #{record.chargeid,jdbcType=DECIMAL},
      </if>
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=OTHER},
      </if>
      <if test="record.amount != null" >
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.pretime != null" >
        PRETIME = #{record.pretime,jdbcType=OTHER},
      </if>
      <if test="record.time != null" >
        TIME = #{record.time,jdbcType=OTHER},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update CHARGE
    set CHARGEID = #{record.chargeid,jdbcType=DECIMAL},
      ACCOUNT = #{record.account,jdbcType=OTHER},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      PRETIME = #{record.pretime,jdbcType=OTHER},
      TIME = #{record.time,jdbcType=OTHER},
      STATE = #{record.state,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.health.entity.Charge" >
    update CHARGE
    <set >
      <if test="account != null" >
        ACCOUNT = #{account,jdbcType=OTHER},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="pretime != null" >
        PRETIME = #{pretime,jdbcType=OTHER},
      </if>
      <if test="time != null" >
        TIME = #{time,jdbcType=OTHER},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=DECIMAL},
      </if>
    </set>
    where CHARGEID = #{chargeid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.health.entity.Charge" >
    update CHARGE
    set ACCOUNT = #{account,jdbcType=OTHER},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      PRETIME = #{pretime,jdbcType=OTHER},
      TIME = #{time,jdbcType=OTHER},
      STATE = #{state,jdbcType=DECIMAL}
    where CHARGEID = #{chargeid,jdbcType=DECIMAL}
  </update>
</mapper>