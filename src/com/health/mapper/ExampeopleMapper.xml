<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.ExampeopleMapper" >
  <resultMap id="BaseResultMap" type="com.health.entity.Exampeople" >
    <result column="PERSONINFOID" property="personinfoid" jdbcType="DECIMAL" />
    <result column="IDENTITY" property="identity" jdbcType="OTHER" />
    <result column="NAME" property="name" jdbcType="OTHER" />
    <result column="AGE" property="age" jdbcType="DECIMAL" />
    <result column="SEX" property="sex" jdbcType="OTHER" />
    <result column="TELEPHONE" property="telephone" jdbcType="OTHER" />
    <result column="ACCOUNT" property="account" jdbcType="OTHER" />
    <result column="BARCODE" property="barcode" jdbcType="DECIMAL" />
    <result column="GUIDETIME" property="guidetime" jdbcType="OTHER" />
    <result column="GUIDEID" property="guideid" jdbcType="DECIMAL" />
    <result column="CHECKSTATE" property="checkstate" jdbcType="DECIMAL" />
    <result column="ALLSUMMARY" property="allsummary" jdbcType="OTHER" />
    <result column="PACKNAME" property="packname" jdbcType="OTHER" />
    <result column="PACKAGEPRICE" property="packageprice" jdbcType="DECIMAL" /> 
    
    <!-- 额外添加  -->
    <result column="GUIDEIDCARD" property="guideidCard" jdbcType="DECIMAL" /> 
    <result column="TOTALPRICE" property="totalprice" jdbcType="DECIMAL" /> 
    <result column="TOTALPACKAGES" property="totalPackages" jdbcType="OTHER" /> 
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PERSONINFOID, IDENTITY, NAME, AGE, SEX, TELEPHONE, ACCOUNT, BARCODE, GUIDETIME, GUIDEID, 
    CHECKSTATE, ALLSUMMARY, PACKNAME, PACKAGEPRICE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.health.entity.ExampeopleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from EXAMPEOPLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <!-- 额外添加  获取所有体检人数据-->
  <select id="selsectAllPeople" resultMap="BaseResultMap" parameterType="com.health.entity.ExampeopleExample">
  	select NAME, TELEPHONE, ACCOUNT, BARCODE,
	count(distinct GUIDEID) as GUIDEIDCARD
	from examPeople
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    group by NAME, TELEPHONE, ACCOUNT, BARCODE
  </select>
  
  <!-- 额外添加  体检人详情-->
  <select id="selectPeopleDetail" resultMap="BaseResultMap" parameterType="com.health.entity.ExampeopleExample">
	select GUIDEID, 
	sum(PACKAGEPRICE) as TOTALPRICE, ALLSUMMARY, CHECKSTATE, 
	wmsys.wm_concat (to_char(PACKNAME)) as TOTALPACKAGES
	from  examPeople
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    group by GUIDEID, ALLSUMMARY, CHECKSTATE
  </select>
  
  <!-- 额外添加 人员信息 -->
   <select id="selectPeopleMsg" resultMap="BaseResultMap" parameterType="com.health.entity.ExampeopleExample">
	select distinct name, age, sex, telephone, account
	from exampeople 
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <delete id="deleteByExample" parameterType="com.health.entity.ExampeopleExample" >
    delete from EXAMPEOPLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.health.entity.Exampeople" >
    insert into EXAMPEOPLE (PERSONINFOID, IDENTITY, NAME, 
      AGE, SEX, TELEPHONE, ACCOUNT, 
      BARCODE, GUIDETIME, GUIDEID, 
      CHECKSTATE, ALLSUMMARY, PACKNAME, 
      PACKAGEPRICE)
    values (#{personinfoid,jdbcType=DECIMAL}, #{identity,jdbcType=OTHER}, #{name,jdbcType=OTHER}, 
      #{age,jdbcType=DECIMAL}, #{sex,jdbcType=OTHER}, #{telephone,jdbcType=OTHER}, #{account,jdbcType=OTHER}, 
      #{barcode,jdbcType=DECIMAL}, #{guidetime,jdbcType=OTHER}, #{guideid,jdbcType=DECIMAL}, 
      #{checkstate,jdbcType=DECIMAL}, #{allsummary,jdbcType=OTHER}, #{packname,jdbcType=OTHER}, 
      #{packageprice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.health.entity.Exampeople" >
    insert into EXAMPEOPLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="personinfoid != null" >
        PERSONINFOID,
      </if>
      <if test="identity != null" >
        IDENTITY,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="age != null" >
        AGE,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="telephone != null" >
        TELEPHONE,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="barcode != null" >
        BARCODE,
      </if>
      <if test="guidetime != null" >
        GUIDETIME,
      </if>
      <if test="guideid != null" >
        GUIDEID,
      </if>
      <if test="checkstate != null" >
        CHECKSTATE,
      </if>
      <if test="allsummary != null" >
        ALLSUMMARY,
      </if>
      <if test="packname != null" >
        PACKNAME,
      </if>
      <if test="packageprice != null" >
        PACKAGEPRICE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="personinfoid != null" >
        #{personinfoid,jdbcType=DECIMAL},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=OTHER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=OTHER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=DECIMAL},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=OTHER},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=OTHER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=OTHER},
      </if>
      <if test="barcode != null" >
        #{barcode,jdbcType=DECIMAL},
      </if>
      <if test="guidetime != null" >
        #{guidetime,jdbcType=OTHER},
      </if>
      <if test="guideid != null" >
        #{guideid,jdbcType=DECIMAL},
      </if>
      <if test="checkstate != null" >
        #{checkstate,jdbcType=DECIMAL},
      </if>
      <if test="allsummary != null" >
        #{allsummary,jdbcType=OTHER},
      </if>
      <if test="packname != null" >
        #{packname,jdbcType=OTHER},
      </if>
      <if test="packageprice != null" >
        #{packageprice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.health.entity.ExampeopleExample" resultType="java.lang.Integer" >
    select count(*) from EXAMPEOPLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update EXAMPEOPLE
    <set >
      <if test="record.personinfoid != null" >
        PERSONINFOID = #{record.personinfoid,jdbcType=DECIMAL},
      </if>
      <if test="record.identity != null" >
        IDENTITY = #{record.identity,jdbcType=OTHER},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=OTHER},
      </if>
      <if test="record.age != null" >
        AGE = #{record.age,jdbcType=DECIMAL},
      </if>
      <if test="record.sex != null" >
        SEX = #{record.sex,jdbcType=OTHER},
      </if>
      <if test="record.telephone != null" >
        TELEPHONE = #{record.telephone,jdbcType=OTHER},
      </if>
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=OTHER},
      </if>
      <if test="record.barcode != null" >
        BARCODE = #{record.barcode,jdbcType=DECIMAL},
      </if>
      <if test="record.guidetime != null" >
        GUIDETIME = #{record.guidetime,jdbcType=OTHER},
      </if>
      <if test="record.guideid != null" >
        GUIDEID = #{record.guideid,jdbcType=DECIMAL},
      </if>
      <if test="record.checkstate != null" >
        CHECKSTATE = #{record.checkstate,jdbcType=DECIMAL},
      </if>
      <if test="record.allsummary != null" >
        ALLSUMMARY = #{record.allsummary,jdbcType=OTHER},
      </if>
      <if test="record.packname != null" >
        PACKNAME = #{record.packname,jdbcType=OTHER},
      </if>
      <if test="record.packageprice != null" >
        PACKAGEPRICE = #{record.packageprice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update EXAMPEOPLE
    set PERSONINFOID = #{record.personinfoid,jdbcType=DECIMAL},
      IDENTITY = #{record.identity,jdbcType=OTHER},
      NAME = #{record.name,jdbcType=OTHER},
      AGE = #{record.age,jdbcType=DECIMAL},
      SEX = #{record.sex,jdbcType=OTHER},
      TELEPHONE = #{record.telephone,jdbcType=OTHER},
      ACCOUNT = #{record.account,jdbcType=OTHER},
      BARCODE = #{record.barcode,jdbcType=DECIMAL},
      GUIDETIME = #{record.guidetime,jdbcType=OTHER},
      GUIDEID = #{record.guideid,jdbcType=DECIMAL},
      CHECKSTATE = #{record.checkstate,jdbcType=DECIMAL},
      ALLSUMMARY = #{record.allsummary,jdbcType=OTHER},
      PACKNAME = #{record.packname,jdbcType=OTHER},
      PACKAGEPRICE = #{record.packageprice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>