<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.ViewpersonguidepackMapper" >
  <resultMap id="BaseResultMap" type="com.health.entity.Viewpersonguidepack" >
    <result column="ROWNUMBER" property="rownumber" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="OTHER" />
    <result column="ACCOUNT" property="account" jdbcType="OTHER" />
    <result column="GUIDEID" property="guideid" jdbcType="DECIMAL" />
    <result column="TIME" property="time" jdbcType="OTHER" />
    <result column="STATE" property="state" jdbcType="DECIMAL" />
    <result column="PACKAGEID" property="packageid" jdbcType="DECIMAL" />
    <result column="PACKNAME" property="packname" jdbcType="OTHER" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ROWNUMBER, NAME, ACCOUNT, GUIDEID, TIME, STATE, PACKAGEID, PACKNAME, PRICE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.health.entity.ViewpersonguidepackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from VIEWPERSONGUIDEPACK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.health.entity.ViewpersonguidepackExample" >
    delete from VIEWPERSONGUIDEPACK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.health.entity.Viewpersonguidepack" >
    insert into VIEWPERSONGUIDEPACK (ROWNUMBER, NAME, ACCOUNT, 
      GUIDEID, TIME, STATE, 
      PACKAGEID, PACKNAME, PRICE
      )
    values (#{rownumber,jdbcType=DECIMAL}, #{name,jdbcType=OTHER}, #{account,jdbcType=OTHER}, 
      #{guideid,jdbcType=DECIMAL}, #{time,jdbcType=OTHER}, #{state,jdbcType=DECIMAL}, 
      #{packageid,jdbcType=DECIMAL}, #{packname,jdbcType=OTHER}, #{price,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.health.entity.Viewpersonguidepack" >
    insert into VIEWPERSONGUIDEPACK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rownumber != null" >
        ROWNUMBER,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="guideid != null" >
        GUIDEID,
      </if>
      <if test="time != null" >
        TIME,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="packageid != null" >
        PACKAGEID,
      </if>
      <if test="packname != null" >
        PACKNAME,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rownumber != null" >
        #{rownumber,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=OTHER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=OTHER},
      </if>
      <if test="guideid != null" >
        #{guideid,jdbcType=DECIMAL},
      </if>
      <if test="time != null" >
        #{time,jdbcType=OTHER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=DECIMAL},
      </if>
      <if test="packageid != null" >
        #{packageid,jdbcType=DECIMAL},
      </if>
      <if test="packname != null" >
        #{packname,jdbcType=OTHER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.health.entity.ViewpersonguidepackExample" resultType="java.lang.Integer" >
    select count(*) from VIEWPERSONGUIDEPACK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update VIEWPERSONGUIDEPACK
    <set >
      <if test="record.rownumber != null" >
        ROWNUMBER = #{record.rownumber,jdbcType=DECIMAL},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=OTHER},
      </if>
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=OTHER},
      </if>
      <if test="record.guideid != null" >
        GUIDEID = #{record.guideid,jdbcType=DECIMAL},
      </if>
      <if test="record.time != null" >
        TIME = #{record.time,jdbcType=OTHER},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=DECIMAL},
      </if>
      <if test="record.packageid != null" >
        PACKAGEID = #{record.packageid,jdbcType=DECIMAL},
      </if>
      <if test="record.packname != null" >
        PACKNAME = #{record.packname,jdbcType=OTHER},
      </if>
      <if test="record.price != null" >
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update VIEWPERSONGUIDEPACK
    set ROWNUMBER = #{record.rownumber,jdbcType=DECIMAL},
      NAME = #{record.name,jdbcType=OTHER},
      ACCOUNT = #{record.account,jdbcType=OTHER},
      GUIDEID = #{record.guideid,jdbcType=DECIMAL},
      TIME = #{record.time,jdbcType=OTHER},
      STATE = #{record.state,jdbcType=DECIMAL},
      PACKAGEID = #{record.packageid,jdbcType=DECIMAL},
      PACKNAME = #{record.packname,jdbcType=OTHER},
      PRICE = #{record.price,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>