<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.DetailMapper" >
  <resultMap id="BaseResultMap" type="com.health.entity.Detail" >
    <id column="DETAILID" property="detailid" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="OTHER" />
    <result column="PARAMETERID" property="parameterid" jdbcType="DECIMAL" />
    <result column="UPLIMIT" property="uplimit" jdbcType="DECIMAL" />
    <result column="LOWLIMIT" property="lowlimit" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    DETAILID, NAME, PARAMETERID, UPLIMIT, LOWLIMIT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.health.entity.DetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from DETAIL
    where DETAILID = #{detailid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from DETAIL
    where DETAILID = #{detailid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.health.entity.DetailExample" >
    delete from DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.health.entity.Detail" >
    insert into DETAIL (DETAILID, NAME, PARAMETERID, 
      UPLIMIT, LOWLIMIT)
    values (#{detailid,jdbcType=DECIMAL}, #{name,jdbcType=OTHER}, #{parameterid,jdbcType=DECIMAL}, 
      #{uplimit,jdbcType=DECIMAL}, #{lowlimit,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.health.entity.Detail" >
    insert into DETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="detailid != null" >
        DETAILID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="parameterid != null" >
        PARAMETERID,
      </if>
      <if test="uplimit != null" >
        UPLIMIT,
      </if>
      <if test="lowlimit != null" >
        LOWLIMIT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="detailid != null" >
        #{detailid,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=OTHER},
      </if>
      <if test="parameterid != null" >
        #{parameterid,jdbcType=DECIMAL},
      </if>
      <if test="uplimit != null" >
        #{uplimit,jdbcType=DECIMAL},
      </if>
      <if test="lowlimit != null" >
        #{lowlimit,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.health.entity.DetailExample" resultType="java.lang.Integer" >
    select count(*) from DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update DETAIL
    <set >
      <if test="record.detailid != null" >
        DETAILID = #{record.detailid,jdbcType=DECIMAL},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=OTHER},
      </if>
      <if test="record.parameterid != null" >
        PARAMETERID = #{record.parameterid,jdbcType=DECIMAL},
      </if>
      <if test="record.uplimit != null" >
        UPLIMIT = #{record.uplimit,jdbcType=DECIMAL},
      </if>
      <if test="record.lowlimit != null" >
        LOWLIMIT = #{record.lowlimit,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update DETAIL
    set DETAILID = #{record.detailid,jdbcType=DECIMAL},
      NAME = #{record.name,jdbcType=OTHER},
      PARAMETERID = #{record.parameterid,jdbcType=DECIMAL},
      UPLIMIT = #{record.uplimit,jdbcType=DECIMAL},
      LOWLIMIT = #{record.lowlimit,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.health.entity.Detail" >
    update DETAIL
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=OTHER},
      </if>
      <if test="parameterid != null" >
        PARAMETERID = #{parameterid,jdbcType=DECIMAL},
      </if>
      <if test="uplimit != null" >
        UPLIMIT = #{uplimit,jdbcType=DECIMAL},
      </if>
      <if test="lowlimit != null" >
        LOWLIMIT = #{lowlimit,jdbcType=DECIMAL},
      </if>
    </set>
    where DETAILID = #{detailid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.health.entity.Detail" >
    update DETAIL
    set NAME = #{name,jdbcType=OTHER},
      PARAMETERID = #{parameterid,jdbcType=DECIMAL},
      UPLIMIT = #{uplimit,jdbcType=DECIMAL},
      LOWLIMIT = #{lowlimit,jdbcType=DECIMAL}
    where DETAILID = #{detailid,jdbcType=DECIMAL}
  </update>
  
  
  <resultMap id="SecondMap" type="com.health.entity.Detail" extends="BaseResultMap">
    <result column="PARAMNAME" property="paramname" jdbcType="OTHER" />
  </resultMap>
  <select id="selectPageList" parameterType="String" resultMap="SecondMap">
  	select d.*,p.PARAMNAME from DETAIL d, PARAMETER p where d.PARAMETERID = p.PARAMETERID 
  	<if test="sItemName != null">
  		and d.NAME like concat(concat('%',#{sItemName}),'%')
  	</if>
  </select>
  
  <resultMap id="paramMap" type="com.health.entity.Parameter" >
    <id column="PARAMETERID" property="parameterid" jdbcType="DECIMAL" />
    <result column="PARENTID" property="parentid" jdbcType="DECIMAL" />
    <result column="PARAMNAME" property="paramname" jdbcType="OTHER" />
  </resultMap>
  
	<select id="selectAllParameter" resultMap="paramMap">
  		select * from PARAMETER where PARENTID = 1
	</select>
	
	<select id="selectByItemId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  		select d.* from DETAIL d,ITEMDETAIL itd where d.DETAILID = itd.DETAILID and itd.ITEMID = #{itemId,jdbcType=DECIMAL}
	</select>
  
</mapper>