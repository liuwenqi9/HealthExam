<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.ItemsMapper" >
  <resultMap id="BaseResultMap" type="com.health.entity.Items" >
    <id column="ITEMID" property="itemid" jdbcType="DECIMAL" />
    <result column="ITEMNAME" property="itemname" jdbcType="OTHER" />
    <result column="DEPTID" property="deptid" jdbcType="DECIMAL" />
    <result column="COST" property="cost" jdbcType="DECIMAL" />
    <result column="CLASSIFY" property="classify" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ITEMID, ITEMNAME, DEPTID, COST
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.health.entity.ItemsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ITEMS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ITEMS
    where ITEMID = #{itemid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ITEMS
    where ITEMID = #{itemid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.health.entity.ItemsExample" >
    delete from ITEMS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.health.entity.Items" >
    insert into ITEMS (ITEMID, ITEMNAME, DEPTID, 
      COST,classify)
    values (#{itemid,jdbcType=DECIMAL}, #{itemname,jdbcType=OTHER}, #{deptid,jdbcType=DECIMAL}, 
      #{cost,jdbcType=DECIMAL}),#{classify,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.health.entity.Items" >
    insert into ITEMS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemid != null" >
        ITEMID,
      </if>
      <if test="itemname != null" >
        ITEMNAME,
      </if>
      <if test="deptid != null" >
        DEPTID,
      </if>
      <if test="cost != null" >
        COST,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemid != null" >
        #{itemid,jdbcType=DECIMAL},
      </if>
      <if test="itemname != null" >
        #{itemname,jdbcType=OTHER},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=DECIMAL},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.health.entity.ItemsExample" resultType="java.lang.Integer" >
    select count(*) from ITEMS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ITEMS
    <set >
      <if test="record.itemid != null" >
        ITEMID = #{record.itemid,jdbcType=DECIMAL},
      </if>
      <if test="record.itemname != null" >
        ITEMNAME = #{record.itemname,jdbcType=OTHER},
      </if>
      <if test="record.deptid != null" >
        DEPTID = #{record.deptid,jdbcType=DECIMAL},
      </if>
      <if test="record.cost != null" >
        COST = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.classify != null" >
        CLASSIFY = #{record.classify,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ITEMS
    set ITEMID = #{record.itemid,jdbcType=DECIMAL},
      ITEMNAME = #{record.itemname,jdbcType=OTHER},
      DEPTID = #{record.deptid,jdbcType=DECIMAL},
      COST = #{record.cost,jdbcType=DECIMAL},
      CLASSIFY = #{record.classify,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.health.entity.Items" >
    update ITEMS
    <set >
      <if test="itemname != null" >
        ITEMNAME = #{itemname,jdbcType=OTHER},
      </if>
      <if test="deptid != null" >
        DEPTID = #{deptid,jdbcType=DECIMAL},
      </if>
      <if test="cost != null" >
        COST = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="classify != null" >
        CLASSIFY = #{classify,jdbcType=DECIMAL},
      </if>
    </set>
    where ITEMID = #{itemid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.health.entity.Items" >
    update ITEMS
    set ITEMNAME = #{itemname,jdbcType=OTHER},
      DEPTID = #{deptid,jdbcType=DECIMAL},
      COST = #{cost,jdbcType=DECIMAL},
      CLASSIFY = #{classify,jdbcType=DECIMAL}
    where ITEMID = #{itemid,jdbcType=DECIMAL}
  </update>
  
  <resultMap id="SecondMap" type="com.health.entity.Items" extends="BaseResultMap">
    <result column="DEPTNAME" property="deptname" jdbcType="OTHER" />
  </resultMap>
  <select id="selectPageList" parameterType="String" resultMap="SecondMap">
  	select d.*,p.DEPTNAME from ITEMS d, DEPT p where d.DEPTID = p.DEPTID 
  	<if test="sItemName != null">
  		and d.ITEMNAME like concat(concat('%',#{sItemName}),'%')
  	</if>
  </select>
  
  <select id="selectItemidByItemname" parameterType="String" resultType="int">
  	select ITEMID from ITEMS where ITEMNAME = #{itemname}
  </select>
	
	<select id="selectByPackId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  		select i.* from ITEMS i,PACKITEM pi where i.ITEMID = pi.ITEMID and pi.PACKAGEID = #{packid,jdbcType=DECIMAL}
	</select>
</mapper>