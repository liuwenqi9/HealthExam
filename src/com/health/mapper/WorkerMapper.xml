<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.WorkerMapper" >
  <resultMap id="BaseResultMap" type="com.health.entity.Worker" >
    <id column="WORKERID" property="workerid" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="OTHER" />
    <result column="PASSWORD" property="password" jdbcType="OTHER" />
    <result column="DEPTID" property="deptid" jdbcType="DECIMAL" />
    <result column="STATE" property="state" jdbcType="DECIMAL" />
  </resultMap>
  <update id="resetPassword" parameterType="java.lang.String">
  	update worker set password = '123456' where name = #{name}
  </update>
  <select id="queryMaxId" resultType="java.lang.Integer">
  	select max(workerid) from worker
  </select>
  <select id="queryworkerName" parameterType="String" resultType="com.health.entity.Worker" >
  	select * from Worker where name like  #{name} ORDER BY workerid ASC
  </select>
  <select id="loginAdmin" parameterType="com.health.entity.Worker"   resultType="com.health.entity.Worker">
       select * from Worker where name=#{name} and password=#{password}
  </select>
  <select id="queryworkerState" parameterType="String" resultType="com.health.entity.Worker">
  	select * from Worker where state like  #{state} ORDER BY workerid ASC
  </select>
  
  <update id="updatePwdWorker" parameterType="com.health.entity.Worker">
	    update  Worker set password=#{password} where name=#{name}
	
	</update>
  
  <update id="changeWorkerState"
		parameterType="java.util.HashMap">
		update worker set state = #{state} where workerid = #{workerid}
	</update>
	<update id="updateWorker" parameterType="java.lang.Integer">
		update worker set deptid = #{deptid} where workerid = #{workerid}
	</update>
  
  <insert id="insertWorker" parameterType="com.health.entity.Worker">
   insert into worker values(#{workerid}, #{name},#{password},#{deptid},0)
   </insert>
   <delete id="deleteFkWork" parameterType = "java.lang.String">
   	delete from workerrole where workerrole.workerid =  (select worker.workerid from worker where worker.name = #{name}) 
   </delete>
  <delete id="deleteWork" parameterType = "java.lang.String">
  	delete from worker where name=#{name}
  </delete>
  <select id="lengthId" resultType="int">
  select max(workerid) from worker
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    WORKERID, NAME, PASSWORD, DEPTID, STATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.health.entity.WorkerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WORKER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from WORKER
    where WORKERID = #{workerid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from WORKER
    where WORKERID = #{workerid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.health.entity.WorkerExample" >
    delete from WORKER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.health.entity.Worker" >
    insert into WORKER (WORKERID, NAME, PASSWORD, 
      DEPTID, STATE)
    values (#{workerid,jdbcType=DECIMAL}, #{name,jdbcType=OTHER}, #{password,jdbcType=OTHER}, 
      #{deptid,jdbcType=DECIMAL}, #{state,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.health.entity.Worker" >
    insert into WORKER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workerid != null" >
        WORKERID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="deptid != null" >
        DEPTID,
      </if>
      <if test="state != null" >
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workerid != null" >
        #{workerid,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=OTHER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=OTHER},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.health.entity.WorkerExample" resultType="java.lang.Integer" >
    select count(*) from WORKER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update WORKER
    <set >
      <if test="record.workerid != null" >
        WORKERID = #{record.workerid,jdbcType=DECIMAL},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=OTHER},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=OTHER},
      </if>
      <if test="record.deptid != null" >
        DEPTID = #{record.deptid,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update WORKER
    set WORKERID = #{record.workerid,jdbcType=DECIMAL},
      NAME = #{record.name,jdbcType=OTHER},
      PASSWORD = #{record.password,jdbcType=OTHER},
      DEPTID = #{record.deptid,jdbcType=DECIMAL},
      STATE = #{record.state,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.health.entity.Worker" >
    update WORKER
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=OTHER},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=OTHER},
      </if>
      <if test="deptid != null" >
        DEPTID = #{deptid,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=DECIMAL},
      </if>
    </set>
    where WORKERID = #{workerid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.health.entity.Worker" >
    update WORKER
    set NAME = #{name,jdbcType=OTHER},
      PASSWORD = #{password,jdbcType=OTHER},
      DEPTID = #{deptid,jdbcType=DECIMAL},
      STATE = #{state,jdbcType=DECIMAL}
    where WORKERID = #{workerid,jdbcType=DECIMAL}
  </update>
</mapper>