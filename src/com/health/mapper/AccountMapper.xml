<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.health.entity.Account" >
    <id column="ACCOUNT" property="account" jdbcType="OTHER" />
    <result column="NAME" property="name" jdbcType="OTHER" />
    <result column="PASSWORD" property="password" jdbcType="OTHER" />
    <result column="STATE" property="state" jdbcType="DECIMAL" />
    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
    <result column="LOCATIONID" property="locationid" jdbcType="DECIMAL" />
    <result column="LOCATIONNAME" property="locationname" jdbcType="OTHER" />
  </resultMap>
  
  	<select id="queryAccountList"  resultType="com.health.entity.Account">
		select * from ACCOUNT
	</select>

	<update id="changeAccountState"
		parameterType="java.util.HashMap">
		update account set state = #{state} where account = #{accountId}
	</update>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ACCOUNT, NAME, PASSWORD, STATE, AMOUNT, LOCATIONID, LOCATIONNAME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.health.entity.AccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Object" >
    select 
    <include refid="Base_Column_List" />
    from ACCOUNT
    where ACCOUNT = #{account,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object" >
    delete from ACCOUNT
    where ACCOUNT = #{account,jdbcType=OTHER}
  </delete>
  <delete id="deleteByExample" parameterType="com.health.entity.AccountExample" >
    delete from ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.health.entity.Account" >
    insert into ACCOUNT (ACCOUNT, NAME, PASSWORD, 
      STATE, AMOUNT, LOCATIONID, 
      LOCATIONNAME)
    values (#{account,jdbcType=OTHER}, #{name,jdbcType=OTHER}, #{password,jdbcType=OTHER}, 
      #{state,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, #{locationid,jdbcType=DECIMAL}, 
      #{locationname,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" parameterType="com.health.entity.Account" >
    insert into ACCOUNT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="locationid != null" >
        LOCATIONID,
      </if>
      <if test="locationname != null" >
        LOCATIONNAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        #{account,jdbcType=OTHER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=OTHER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=OTHER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="locationid != null" >
        #{locationid,jdbcType=DECIMAL},
      </if>
      <if test="locationname != null" >
        #{locationname,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.health.entity.AccountExample" resultType="java.lang.Integer" >
    select count(*) from ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ACCOUNT
    <set >
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=OTHER},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=OTHER},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=OTHER},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null" >
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.locationid != null" >
        LOCATIONID = #{record.locationid,jdbcType=DECIMAL},
      </if>
      <if test="record.locationname != null" >
        LOCATIONNAME = #{record.locationname,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ACCOUNT
    set ACCOUNT = #{record.account,jdbcType=OTHER},
      NAME = #{record.name,jdbcType=OTHER},
      PASSWORD = #{record.password,jdbcType=OTHER},
      STATE = #{record.state,jdbcType=DECIMAL},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      LOCATIONID = #{record.locationid,jdbcType=DECIMAL},
      LOCATIONNAME = #{record.locationname,jdbcType=OTHER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.health.entity.Account" >
    update ACCOUNT
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=OTHER},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=OTHER},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="locationid != null" >
        LOCATIONID = #{locationid,jdbcType=DECIMAL},
      </if>
      <if test="locationname != null" >
        LOCATIONNAME = #{locationname,jdbcType=OTHER},
      </if>
    </set>
    where ACCOUNT = #{account,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.health.entity.Account" >
    update ACCOUNT
    set NAME = #{name,jdbcType=OTHER},
      PASSWORD = #{password,jdbcType=OTHER},
      STATE = #{state,jdbcType=DECIMAL},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      LOCATIONID = #{locationid,jdbcType=DECIMAL},
      LOCATIONNAME = #{locationname,jdbcType=OTHER}
    where ACCOUNT = #{account,jdbcType=OTHER}
  </update>
</mapper>